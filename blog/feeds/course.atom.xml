<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>協同產品設計實習 - Course</title><link href="./" rel="alternate"></link><link href="./feeds/course.atom.xml" rel="self"></link><id>./</id><updated>2018-05-23T12:00:00+08:00</updated><entry><title>Week12</title><link href="./week12.html" rel="alternate"></link><published>2018-05-23T12:00:00+08:00</published><updated>2018-05-23T12:00:00+08:00</updated><author><name>40523219</name></author><id>tag:None,2018-05-23:./week12.html</id><summary type="html">&lt;h3&gt;第十二週課程&lt;/h3&gt;

&lt;p&gt;1.請各組員在各自的 Github Pages 中繪製一個自選齒數的漸開線正齒輪輪廓外型.&lt;br&gt;
2.完成單一齒輪輪廓繪圖後, 請繪製一組 50t 與 25t 的齒輪嚙合靜態輪廓圖.&lt;br&gt;
3.完成兩齒嚙合靜態繪圖後, 請嘗試轉為動態繪圖.&lt;br&gt;
&lt;h4&gt;完成上述任務後, 請在下列 comments 回報繪圖連結.&lt;/h4&gt;&lt;/p&gt;
</summary><content type="html">&lt;h3&gt;第十二週課程&lt;/h3&gt;

&lt;p&gt;1.請各組員在各自的 Github Pages 中繪製一個自選齒數的漸開線正齒輪輪廓外型.&lt;br&gt;
2.完成單一齒輪輪廓繪圖後, 請繪製一組 50t 與 25t 的齒輪嚙合靜態輪廓圖.&lt;br&gt;
3.完成兩齒嚙合靜態繪圖後, 請嘗試轉為動態繪圖.&lt;br&gt;
&lt;h4&gt;完成上述任務後, 請在下列 comments 回報繪圖連結.&lt;/h4&gt;&lt;/p&gt;


&lt;p&gt;利用漸開線原理, 以 Brython 繪製單一正齒輪廓:&lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 53
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")
# 以下列出 W11 2B 未出席人數
data = open("./../data/w11/2b0503.txt", encoding="utf-8").read()
count = 0
# 去掉前面兩列
student = data.split("\n")[2:]
for i in range(len(student)):
    each = student[i].split("\t")
    if each[1] != "出席":
        count = count + 1
#print(count)
div = doc["onegear_div"]
div &lt;= "2b: " +  str(count) + "/" + str(len(student))
&lt;/script&gt;</content><category term="Brython正齒輪繪製"></category></entry><entry><title>Week7</title><link href="./week7.html" rel="alternate"></link><published>2018-04-11T12:00:00+08:00</published><updated>2018-04-11T12:00:00+08:00</updated><author><name>40523219</name></author><id>tag:None,2018-04-11:./week7.html</id><summary type="html">&lt;p&gt;W7&lt;/p&gt;</summary><content type="html">&lt;p&gt;W7&lt;/p&gt;</content><category term="筆記"></category></entry><entry><title>Week5</title><link href="./week5.html" rel="alternate"></link><published>2018-03-28T12:00:00+08:00</published><updated>2018-03-28T12:00:00+08:00</updated><author><name>40523219</name></author><id>tag:None,2018-03-28:./week5.html</id><summary type="html">&lt;h2&gt;利用 Python3 找出缺席名單&lt;/h2&gt;

</summary><content type="html">&lt;h2&gt;利用 Python3 找出缺席名單&lt;/h2&gt;



&lt;pre&gt;
f1 = open('111.txt', 'r')
f2 = open('222.txt', 'r')
#讀取 111.txt(點名名單) &amp; 222.txt(修課名單) 進行比對
s1 = set(f1)
s2 = set(f2)
#將兩者集合
print ('二乙缺席名單:')
print (list(s1.symmetric_difference(s2)))
&lt;/pre&gt;

&lt;h2&gt;顯示結果如下:&lt;/h2&gt;

&lt;pre&gt;
二乙缺席名單:
['40523224\n', '40523232\n', '40523212\n', '40523234\n', '40523227\n', '40523231\n', '40523217\n', '40523222\n']
&lt;/pre&gt;

&lt;h2&gt;參考資料:&lt;/h2&gt;

&lt;h4&gt;Python3 字串型態&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://openhome.cc/Gossip/Python/StringType.html"&gt;https://openhome.cc/Gossip/Python/StringType.html &lt;/a&gt;
&lt;h4&gt;Python3 集合set說明&lt;/h4&gt;
&lt;a href="http://www.iplaypy.com/jichu/set.html"&gt;http://www.iplaypy.com/jichu/set.html &lt;/a&gt;
&lt;h4&gt;Python3 輸出與輸入&lt;/h4&gt;
&lt;a href="http://docspy3zh.readthedocs.io/en/latest/tutorial/inputoutput.html"&gt;http://docspy3zh.readthedocs.io/en/latest/tutorial/inputoutput.html &lt;/a&gt;
&lt;h4&gt;差集、相對差集、絕對差集&lt;/h4&gt;
&lt;a href="https://zh.wikipedia.org/wiki/%E8%A1%A5%E9%9B%86"&gt;https://zh.wikipedia.org/wiki/%E8%A1%A5%E9%9B%86 &lt;/a&gt;
&lt;h4&gt;比較兩者字串&lt;/h4&gt;
&lt;a href="http://wiki.alarmchang.com/index.php?title=%E6%AF%94%E8%BC%83%E5%85%A9%E5%80%8B_List_%E4%B9%8B%E9%96%93%E7%9A%84%E5%B7%AE%E7%95%B0"&gt;http://wiki.alarmchang.com/index.php?title=%E6%AF%94%E8%BC%83%E5%85%A9%E5%80%8B_List_%E4%B9%8B%E9%96%93%E7%9A%84%E5%B7%AE%E7%95%B0 &lt;/a&gt;&lt;/p&gt;</content><category term="筆記"></category></entry><entry><title>Week4</title><link href="./week4.html" rel="alternate"></link><published>2018-03-21T12:00:00+08:00</published><updated>2018-03-21T12:00:00+08:00</updated><author><name>40523219</name></author><id>tag:None,2018-03-21:./week4.html</id><summary type="html">&lt;h2&gt;利用 &lt;b&gt;reg登錄檔&lt;/b&gt; 更快速對 Proxy 進行更改.&lt;/h2&gt;

</summary><content type="html">&lt;h2&gt;利用 &lt;b&gt;reg登錄檔&lt;/b&gt; 更快速對 Proxy 進行更改.&lt;/h2&gt;



&lt;pre&gt;
&lt;li&gt;內容第一行必須為 REGEDIT4 (必須大寫, 而且必須在第一行, REGEDIT4 是 Windows 95/98/ME/NT, 5 是 Windows2000/XP), 看&lt;br&gt;你使用的環境來選擇 REGEDIT4 或 Windows Registry Editor Version 5.00
&lt;li&gt;第二行必須空行
&lt;li&gt;第三行即編輯機碼以及其值
&lt;/pre&gt;

&lt;h2&gt;參考資料:&lt;/h2&gt;

&lt;h4&gt;可攜程式套件系統升級&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/mdecourse/cd2018/issues/15"&gt;https://github.com/mdecourse/cd2018/issues/15 &lt;/a&gt;
&lt;h4&gt;如何製作 *.reg /登錄檔&lt;/h4&gt;
&lt;a href="http://domon80501.pixnet.net/blog/post/70076040"&gt;http://domon80501.pixnet.net/blog/post/70076040 &lt;/a&gt;
&lt;h4&gt;Microsoft - 使用登錄機碼&lt;/h4&gt;
&lt;a href="https://docs.microsoft.com/zh-tw/powershell/scripting/getting-started/cookbooks/working-with-registry-keys?view=powershell-6"&gt;https://docs.microsoft.com/zh-tw/powershell/scripting/getting-started/cookbooks/working-with-registry-keys?view=powershell-6 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;
&lt;h2&gt;了解 Python 與 Lua 程式解譯系統&lt;/h2&gt;
利用瀏覽器上的 Brython 與 Python 語法直接編寫與產品設計分析有關的程式.，將 Lua 程式導入個人倉儲&lt;/p&gt;
&lt;p&gt;參考 &lt;a href="https://github.com/davchoo/SchoolProject"&gt;https://github.com/davchoo/SchoolProject &lt;/a&gt; 以 &lt;a href="https://github.com/fengari-lua/fengari-web"&gt;https://github.com/fengari-lua/fengari-web &lt;/a&gt; 直接在瀏覽器上執行 Lua 程式.&lt;/p&gt;
&lt;h2&gt;參考資料:&lt;/h2&gt;

&lt;h4&gt;Week4 - lssues&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/mdecourse/vecp2018/issues/6"&gt;https://github.com/mdecourse/vecp2018/issues/6 &lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;線上Lua程式執行&lt;/h4&gt;

&lt;p&gt;&lt;a href="http://mde.tw/vecp2018/lua/SchoolProject/"&gt;http://mde.tw/vecp2018/lua/SchoolProject/ &lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Brython 3.3.4 程式環境&lt;/h4&gt;

&lt;p&gt;&lt;a href="http://lab.kmol.info/blog/brython-programming-environment.html"&gt;http://lab.kmol.info/blog/brython-programming-environment.html &lt;/a&gt;&lt;/p&gt;</content><category term="筆記"></category></entry><entry><title>Week3</title><link href="./week3.html" rel="alternate"></link><published>2018-03-13T12:00:00+08:00</published><updated>2018-03-13T12:00:00+08:00</updated><author><name>40523219</name></author><id>tag:None,2018-03-13:./week3.html</id><summary type="html">&lt;h4&gt;將個人在上學期鋼球循環運動中所完成的內容，整理到各組的 gitbook 線上報告中&lt;/h4&gt;

&lt;h4&gt;將各組的 gitbook 連結，提供在當週 issue 回應中&lt;/h4&gt;

</summary><content type="html">&lt;h4&gt;將個人在上學期鋼球循環運動中所完成的內容，整理到各組的 gitbook 線上報告中&lt;/h4&gt;

&lt;h4&gt;將各組的 gitbook 連結，提供在當週 issue 回應中&lt;/h4&gt;



&lt;pre&gt;
&lt;li&gt;&lt;b&gt;軌道尺寸規格 : &lt;/b&gt;23.5 x 17.5 x 16 (mm)
&lt;li&gt;&lt;b&gt;單次運行時間 : &lt;/b&gt;27s
&lt;li&gt;&lt;b&gt;單次運行路徑長 : &lt;/b&gt;104.27 ~ 117 cm
&lt;li&gt;&lt;b&gt;心得 :&lt;/b&gt;
    導入雲端繪圖(Onshape)，因為使用雲端存取功能，使用上比較沒有類似 Inventor &amp; Slideworld 的功能以及即時存取好，&lt;br&gt;    但它的優點就是可以隨時隨地打開資料且修改；雖然功能能夠減少許多作業疏失，但我覺得 V-rep 在操作方面分劃太粗略。
&lt;/pre&gt;

&lt;h4&gt;影片連結 :&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/251265772"&gt;https://vimeo.com/251265772 &lt;/a&gt;
&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
        &lt;iframe src="https://vimeo.com/251265772" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
    &lt;/script&gt;
&lt;/section&gt;&lt;/p&gt;</content><category term="筆記"></category></entry></feed>